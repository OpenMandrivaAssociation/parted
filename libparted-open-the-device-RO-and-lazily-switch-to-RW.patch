diff -Naur parted-3.2/libparted/arch/linux.c parted-3.2.tpg/libparted/arch/linux.c
--- parted-3.2/libparted/arch/linux.c	2016-06-29 21:10:38.000000000 +0000
+++ parted-3.2.tpg/libparted/arch/linux.c	2016-06-29 21:21:30.239556935 +0000
@@ -295,6 +295,8 @@
 static int _device_open (PedDevice* dev, int flags);
 static int _device_open_ro (PedDevice* dev);
 static int _device_close (PedDevice* dev);
+static int linux_close (PedDevice* dev);
+static void _flush_cache (PedDevice* dev);
 
 static int
 _read_fd (int fd, char **buf)
@@ -448,6 +450,24 @@
         return _major_type_in_devices (major, "blkext");
 }
 
+static void
+_ensure_read_write (PedDevice *dev)
+{
+       PED_ASSERT (dev != NULL);
+       LinuxSpecific* arch_specific = LINUX_SPECIFIC (dev);
+
+       if (arch_specific->rw)
+              return;
+
+       if (!linux_close(dev))
+              return;
+
+       if (!_device_open (dev, RW_MODE))
+             return;
+
+       _flush_cache (dev);
+}
+
 #ifdef ENABLE_DEVICE_MAPPER
 static int
 _dm_task_run_wait (struct dm_task *task, uint32_t cookie)
@@ -1618,6 +1638,7 @@
 
         if (dev->read_only)
                 return;
+        _ensure_read_write (dev);
         dev->dirty = 0;
 
         ioctl (arch_specific->fd, BLKFLSBUF);
@@ -1661,7 +1682,7 @@
 static int
 linux_open (PedDevice* dev)
 {
-    return _device_open (dev, RW_MODE);
+    return _device_open (dev, RD_MODE);
 }
 
 static int
@@ -1699,10 +1720,12 @@
                 }
         } else {
                 dev->read_only = 0;
+                if (flags == WR_MODE || flags == RW_MODE)
+            		arch_specific->rw = 1;
+            	else
+			arch_specific->rw = 0;
         }
 
-        _flush_cache (dev);
-
         return 1;
 }
 
@@ -1804,6 +1827,7 @@
 
         PED_ASSERT(dev != NULL);
         PED_ASSERT(buffer != NULL);
+        _ensure_read_write (dev);
 
         arch_specific = LINUX_SPECIFIC (dev);
 
@@ -1982,6 +2006,7 @@
                         return 1;
         }
 
+        _ensure_read_write (dev);
         if (_get_linux_version() < KERNEL_VERSION (2,6,0)) {
                 /* Kludge.  This is necessary to read/write the last
                    block of an odd-sized disk, until Linux 2.5.x kernel fixes.
@@ -2511,6 +2536,7 @@
         LinuxSpecific*          arch_specific = LINUX_SPECIFIC (dev);
         struct blkpg_ioctl_arg  ioctl_arg;
 
+        _ensure_read_write (dev);
         ioctl_arg.op = op;
         ioctl_arg.flags = 0;
         ioctl_arg.datalen = sizeof (struct blkpg_partition);
diff -Naur parted-3.2/libparted/arch/linux.h parted-3.2.tpg/libparted/arch/linux.h
--- parted-3.2/libparted/arch/linux.h	2014-06-15 18:17:43.000000000 +0000
+++ parted-3.2.tpg/libparted/arch/linux.h	2016-06-29 21:14:31.578786193 +0000
@@ -1,3 +1,4 @@
+
 /* libparted - a library for manipulating disk partitions
     Copyright (C) 2009-2014 Free Software Foundation, Inc.
 
@@ -30,6 +31,7 @@
 	int	fd;
 	int	major;
 	int	minor;
+	int     rw;
 	char*	dmtype;         /**< device map target type */
 #if defined __s390__ || defined __s390x__
 	unsigned int real_sector_size;
